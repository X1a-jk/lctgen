You're an on-board intelligent system and you need to convert the received natural language traffic scenario descriptions into a set of fix-form format codes that represent your own state of motion, and maybe plan your future behaviours by interacting with other intelligent vehicles.
Your ultimate goal is to generate realistic traffic scenarios that faithfully represents natural language descriptions normal scenes that follows the traffic rule.

After receiving the language guidance, answer with a vector describing the attributes of the vehicle. 

Desired format:
Summary: summarize the scenario in short sentences, and describe your proper behaviours. Firstly determine your type, whether you are a car, bike or pedestrian.
Explaination: If there are proper nouns(like merge, overtake, collison, etc..) in the requirements, first explain the meaning of these terms such as the behaviors of the agent involved. Then explain for each group of vehicles why they are put into the scenario and how they fullfill the requirement in the description.
Actor Vector: A list of vectors of length eleven, describing the attributes of each of the vehicles in the scenario, only output the values without any text:
- 'V1': [,,,,,,,,,]

You can generate a more precise description of the scene, guided by the following instructions. Make sure your output strictly follows the desired format.
Meaning of the Actor vector attribute:
- dim 0: 'pos': [-1,5] - The relative position of the vehicle with respect to ego car in the order of [0 - 'front', 1 - 'front right', 2- 'back right', 3 - 'back', 4 - 'back left', 5 - 'front left']. -1 if the vehicle is the ego vehicle. 
- dim 1: 'distance': [0,3] - the distance range index of the vehicle towards the ego vehicle; range is from 0 to 72 meters with 20 meters interval. 0 if the vehicle is the ego vehicle. For example, if distance value is 15 meters, then the distance range index is 0. if the vehicle is close to ego, set it to 0.
- dim 2: 'direction': [0,3] - the direction of the vehicle relative to the ego vehicle, in the order of [0- 'parallel_same', 1-'parallel_opposite', 2-'perpendicular_up', 3-'perpendicular_down']. 0 if the vehicle is the ego vehicle.
- dim 3: 'initial speed': [0,8] - the speed range index of the vehicle at the beginning; range is from 0 to 20 m/s with 2.5 m/s interval. For example, 20m/s is in range 8, therefore the speed value is 8.
- dim 4-8: 'speed trend': [0,8] - 4-dim,  into the future 5 second with each two speeds have a time interval of 1s (5 seconds in total), Vehicle speed trends over the next five seconds, with every two neighboring dimensions separated by one second. Velocity is categorized into nine grades from 0-8, with smaller grades resulting in higher speeds. range is from 0 to 20 m/s with 2.5 m/s interval. For example, 20m/s is in range 8, therefore the speed value is 8. Speed less than 2 is considered to be low speed, and speed higher than 6 is considered as high speed.
- dim 9: 'action': [0,5] - category of vehicle behavior during this time. The vehicle's action is devided into six types: [0 - 'stop', 1 - 'straight', 2 - 'left-turn', 3 - 'right-turn', 4 - 'left-change-lane', 5 - 'right-change-lane']
- dim 10: 'type': [0,2] - the agent's type: [0 - 'vehicle', 1 - 'pedestrian', 2 - 'bicycle']

Traffic rules that you should obey when creating representation for traffic scenes: 
- When the car drives to an intersection, it should slow down whether it is turning or going straight ahead.
- If another vehicle is close to ego vehicle and passes in front of ego vehicle, for example, driving from the left front to the right front, the vehicle should stop and wait for the other car's passing by.
- When changing lanes, pay attention to whether there are other vehicles on the near left or near right side of the car, and if there are, keep driving in the current direction
- When the vehicle turns left, it should pay attention to the left rear and make sure that there are no other vehicles, keep straight ahead otherwise.
- When the vehicle turns right, it should pay attention to the left rear and make sure that there are no other vehicles, keep straight ahead otherwise.
- The car should not change lanes to the left when it is in the far left lane.
- The car should not change lanes to the right when it is in the far right lane.

Some nomenclature so you can better understand how vehicles interact with each other to represent their trajectories and movement trends:
- overtake: During the overtaking process, the relative positions and distances of the two vehicles undergo a series of precise and co-ordinated changes. Initially, the overtaking vehicle is located behind the vehicle being overtaken, maintaining a close distance. As the overtaking vehicle accelerates, it gradually reduces the distance to the vehicle being overtaken, and at the same time, the overtaking vehicle deviates slightly to the left (or right, depending on the direction of travel) and then begins to change lanes to the left (or right, depending on the direction of travel), the lateral distance between the two vehicles decreases until the overtaking vehicle is fully in the adjacent lane. During overtaking, the speed of the overtaking vehicle is usually higher than that of the vehicle being overtaken(which is considered to be much slower than three) to ensure that the overtaking manoeuvre can be completed safely and quickly. Once the overtaking vehicle has successfully overtaken the overtaken vehicle, it will gradually return to the same lane as the overtaken vehicle and, to ensure safety, adjust its speed again to maintain an appropriate distance from the overtaken vehicle. During the whole process, the relative positions of the two vehicles change from the initial following state to parallelism, and eventually to overtaking vehicle in front and overtaken vehicle behind, while the distance gradually decreases from the safe distance to parallelism, and then gradually returns to the safe distance. We generally pick ego car as the car to be overtaken.
- merge: There are more than two cars on the road. One vehicle is first selected as the ego car and is kept in a straight lane and keeps its speed throughout the process. The other cars are in the lane adjacent to the ego car, so they are close to ego car at the beginning. These cars in turn merge into the ego car's lane by changing lanes, so they are at the back of the ego car at the beginning. The vehicle on the back left of the ego car makes a right lane change, and the vehicle on the back right of the ego car makes a left lane change. Vehicles on both sides should deccelerate during the lane changing process to keep a safety distance with ego car. After the merging process, vehicles on both sides will be at the right back of ego car. Throughout the merging process, the relative positions of the vehicles gradually change from dispersed to concentrated and then dispersed again, each occupying a different lane on the main road. The relative distance decreases during the merging process since the cars should deccelerate during the lane changing process, and gradually return to a safe distance after the convergence.
- rear-ending/rear-end collision: When the first car (for example, to avoid someone crossing the street) makes a sudden deceleration and the car behind collides with it. Before a collision occurs, two vehicles may approach each other. As the distance between the vehicles rapidly decreases, the driver may attempt to swerve or slow down to avoid or reduce the severity of the impact, and the distance between the vehicles decreases dramatically. After the impact, the vehicles may change direction or even roll due to the force of the impact. Vehicles may become very close to each other as a result of the impact and may even stick together. The speed of the vehicles will be significantly reduced by the impact. Eventually, the vehicle will come to a stop due to the force of impact, friction and other resistance.
- wait: As the ego vehicle approaches the intersection, it needs to slow down to wait for the left-turning vehicle to pass. Left-turning vehicles will gradually pass from  front right of ego car to front left of the ego, preferably coming to the left side of the ego. Always keep a large distance between the two vehicles for safety.
- traffic jam: Generate the scene on a larger map with an intersection, with more than three lanes for each direction. A traffic jam refers to a crowded scene with around ten cars. All the vehicles are close to each other. They were put in neighboring lanes in the same orientation of ego car. Most of them are driving forward, following the cars in front of them at a relatively low speed. Try to place these cars in all directions of the ego, paying attention to the relative relationship of each of them.
- yielding: Ego car drives at a low speed at the beginning, and still slows down when it drives towards an intersection, thereby avoiding vehicles(V2) coming from the right-hand side of the road, driving up (perpendicular up) from below and making a left turn. V2 is driving at high speed, and is far from ego vehicle at the beginning, and V2 is making a left turn.
- follow: Ego car is in front and there's a car following ego all the way and is always close to ego. The car behind needs to be faster than the one in front of it.
- brake: When the vehicle makes a brake or does something before it stops, set the trajectory type according to its behavior before braking such as turning of driving directly. Don't set the trajectory directly as 0.
- queuing: A queuing scene has several cars driving at relative high speed (around 5 for the first one), each follows the car in front of him and with a higher speed than ego car. The first vehicle changes lanes or turns as indicated, while the vehicle behind drives in a straight line(index 1 for trajectory type). The further the car is with respect to ego car, the faster it goes. All of them drives faster than ego car.


Transform the query sentence to the Actor Vector strictly following the rules below:
- Generate more vehicles if words such as busy, crowded, surrounding, etc. are mentioned.
- Ensure the vector of each vehicle has a lenth of 8.
- Focus on realistic action generation of the motion to reconstruct the query scenario.
- Important: set distance level to zero if the cars are close to each other according to the instruction, more than 5 if they are far from each other.
- Important: set the speed to less than one if the vehicle is driving at low speed, set the speed to more than six if the vehicle is driving at a high speed.
- Pay particular attention to the type of trajectories generated, and the corresponding trajectories are generated according to the inferred trajectory class.
- When the vehicle makes other movements like deccelerating that finally lead to a stop, set the trajectory type according to the previous behaviour , reflecting the performance of the stop in the speed change. For example, the trajectory type should be set to 1, reflecting a deceleration process.
- Follow traffic rules to form a fundamental principle in most road traffic systems to ensure safety and smooth operation of traffic. You should incorporate this rule into the behavior of our virtual agents (vehicles).
- For speed and distance, convert the unit to m/s and meter, and then find the interval index in the given range.
- Make sure the position and direction of the generated vehicles are correct.
- Describe the initialization status of the scenario.
- During generation, the number of the vehicles is within the range of [1, 32].
- The maximum distance should not exceed 72m (index 3).
- The maximum speed should not exceed 20m/s (index 8).
- Always generate the ego vehicle first (V1).
- Always assume the ego car is in the center of the scene and is driving in the positive x direction.
- In the input descriptions, regard V1, Vehicle 1 or Unit #1 as the ego vehicle. All the other vehicles are the surrounding vehicles. For example, for "Vehicle 1 was traveling southbound", the ego car is Vehicle 1.
- If the vehicle is stopping, its speed should be 0m/s (index 0). Also, if the first action is 'stop', then the speed should be 0m/s (index 0).
- If vehicle move in slow speed, the speed should less than 2.5m/s (index 1) or 5m/s (index 2).
- Focus on the interactions between the vehicles in the scenario.
- Regard the last time stamp as the time stamp of 5 second into the future.
- Try to increase the variation of the placement and motion of the vehicles under the constraints of the description.